openapi: 3.0.2
info:
  title: Documents API Cloud Function PakArbi - OpenAPI 3.0
  description: >-
    Dokumentasi API untuk Aplikasi PakArbi dari Cloud function 
  termsOfService: https://github.com/PakArbi/documents
  contact:
    email: sidiqfaisal30@gmail.com
  license:
    name: Package BackendUser
    url: https://pkg.go.dev/github.com/pakarbi/backendUser
  version: 1.0.11
externalDocs:
  description: Website kami
  url: https://pakarbi.github.io
servers:
  - url: https://us-central1-project3-403614.cloudfunctions.net/server
tags:
  - name: Users
    description: Pengelolaan Data User
    externalDocs:
      description: Deskripsi & SourceCode Program
      url: https://pakarbi.github.io/backendUser
  - name: auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi & SourceCode Program
      url: https://pakarbi.github.io/backendUser
  - name: Dosen
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi & SourceCode Program
      url: https://pakarbi.github.io/backendUser
  - name: Mahasiswwa
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi & SourceCode Program
      url: https://pakarbi.github.io/backendUser
paths:
  /RegisterUser:
    post:
      tags:
        - Users
      summary: Register User Without Token
      description: Daftar Akun User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
  /Login:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input

  /GetUserWithToken:
    get:
      tags:
        - Users
      summary: Get Data User Khusus Admin
      description: Header auth for admin only
      operationId: GetdataUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/responseUser'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /InsertDataMahasiswa:
    post:
      tags:
        - mahasiswa
      summary: Insert data Mahasiswa Khusus Admin
      description: Header auth for admin only
      operationId: InsertdataMahasiswa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mahasiswa'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedMahasiswa'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey
  /updatedataDosen:
    put:
      tags:
        - Dosen
      summary: Update data User Khusus Admin
      description: Header auth for admin only
      operationId: UpdatedataDosen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Updated'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedMahasiswa'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey
  /InsertDataDosen:
    post:
      tags:
        - Dosen
      summary: Insert data Dosen Khusus Admin
      description: Header auth for admin only
      operationId: InsertdataDosen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dosen'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedDosen'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey
  /deleteuser:
    delete:
      tags:
        - Users
      summary: delete Khusus Admin
      description: Header auth for admin only
      operationId: DeleteUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUsers'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Time'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey
components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example : Kuytuy
        password:
          type: string
          example: KuytuyPass
        role:
          type: string
          example: user
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    FeedMahasiswa:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: berhasil mengambil data
        data:
          type: object
          properties:
            username:
              type: string
              example: sankuy
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: user
    FeedBack:
          type: object
          properties:
            Status:
              type: integer
              format: int32
            Message:
              type: string
            Data:
              type: array
              items:
                type: string
    User:
          type: object
          properties:
            Username:
              type: string
              description: The username of the user
            Password:
              type: string
              description: The password of the user
            Role:
              type: string
              description: The role of the user

    ResponseMahasiswa:
      type: object
      properties:
        Status:
          type: integer
          format: int32
        Message:
          type: string
        Data:
          $ref: '#/components/schemas/Mahasiswa'
    Time:
      type: object
      properties:
        Status:
          type: integer
          format: int32
        Message:
          type: string

    RequestUsers:
      type: object
      properties:
        Username:
          type: string
    Mahasiswa:
      type: object
      properties:
        MahasiswaId:
          type: string
        Nama:
          type: string
        Email:
          type: string        
        Phone:
          type: string
        Prodi:
          $ref: '#/components/schemas/Prodi'
        Account:
          $ref: '#/components/schemas/User'

    Prodi:
      type: object
      properties:
        ProdId:
          type: integer
          format: int32
        ProdNama:
          type: string

    Updated:
      type: object
      properties:
        Email:
          type: string
        Prodi:
          type: string
        Phone:
          type: string
    Auth:
      type: object
      properties:
        username:
          type: string
          example: Sankuy
        password:
          type: string
          example: Sankuy
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: cihuy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header