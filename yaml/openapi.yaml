openapi: 3.0.3
info:
  title: Documents API Cloud Function PakArbi - OpenAPI 3.0
  description: >-
    Dokumentasi API untuk Aplikasi PakArbi dari Cloud function 
  termsOfService: https://github.com/PakArbi/documents
  contact:
    email: sidiqfaisal30@gmail.com
  license:
    name: Package 
    url: https://pkg.go.dev/github.com/PakArbi/pasetobackend
  version: 1.0.11
externalDocs:
  description: Website kami
  url: https://pakarbi.github.io
servers:
  - url: https://asia-southeast2-project3-403614.cloudfunctions.net/
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pasetobackend
  - name: User
    description: Pengelolaan Data User
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pasetobackend
  - name: Code QR
    description: Generator Code QR
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/backprofile
  - name: Profile
    description: Data Profile
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/backprofile
paths:
  /login:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /Register:
    post:
      tags:
        - User
      summary: Insert User
      description: data username
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input          
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /insertProfile:
    post:
      tags:
        - Profile
      summary: Insert Data Profile
      description: data private
      operationId: 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profile'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input          
      security:
        - Login:
          - write:apiKey
          - read:apiKey
        
  /updateProfile:
    put:
      tags:
        - Profile
      summary: Update data User Khusus Admin
      description: Header auth for admin only
      operationId: UpdatedataDosen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Updated'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/profile'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /deleteuser:
    delete:
      tags:
        - Profile
      summary: delete Data atau mereset
      description: Header auth for admin only
      operationId: DeleteProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestProfile'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Credential'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /codeqr:  
    get:
      tags:
        -  Code QR
      summary: A QR code generation endpoint
      parameters:
        - name: Image URL
          in: path
          required: true
          description: URL or base64 encoded URL of the image to be included in the QR code
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
              img/png:
                schema: 
                  type: string
                  format: binary
        '400':
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
          security:
        - Login:
          - write:apiKey
          - read:apiKey
    
    
  # /codeqrPost:
  #   post:
  #     tags:
  #       - Code QR
  #     summary: A QR code generation endpoint
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Image'
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #             img/png:
  #               schema: 
  #                 type: string
  #                 format: binary
  #       '400':
  #       description: Bad Request
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Response'
  #       '405':
  #         description: Invalid input
  #         security:
  #       - Login:
  #         - write:apiKey
  #         - read:apiKey
  # /codeqr:
  #   put:
  #     tags:
  #       - Code QR
  #     summary: A QR code generation endpoint
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Image'
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #             img/png:
  #               schema: 
  #                 type: string
  #                 format: binary
  #       '400':
  #       description: Bad Request
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Response'
  #       '405':
  #         description: Invalid input
  #         security:
  #       - Login:
  #         - write:apiKey
  #         - read:apiKey
components:
  schemas:
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    Auth:
      type: object
      properties:
        username:
          type: string
          example: faisal
        password:
          type: string
          example: sankuy
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: pakarbi
    Image:
      type: object
      properties:
        image:
          type: string
          example: https://i.ibb.co/0jZ3qYH/IMG-20211013-094400.jpg

  RequestProfile:
      type: object
      properties:
        Username:
          type: string
          example: faisal
        Npm:
          type: string
          example: 1214041
        Email:
          type: string
          example: 1214041@std.ulbi.ac.id
    
  profile:
      type: object
      properties:
        ID:
          type: string
          example: 1
        NamaLengkap:
          type: string
          example: Muhammad Faisal Ashshidiq
        Npm:
          type: string
          example: 1214041
        NamaKendaraan:
          type: string
          example: Mio Z 
        NomorKendaraan:
          type: string
          example: D 4416 LGJ
        Time:
          type: string
          example: 2023-11-29T03:09:17+07:00

  user:
      type: object
      properties:
        username:
          type: string
          example : sankuy
        password:
          type: string
          example: kuyahh
        role:
          type: string
          example: user
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header

      