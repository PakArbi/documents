openapi: 3.0.3
info:
  title: Documents API Cloud Function PakArbi - OpenAPI 3.0
  description: >-
    Dokumentasi API untuk Aplikasi PakArbi dari Cloud function 
  termsOfService: https://github.com/PakArbi/documents
  contact:
    email: sidiqfaisal30@gmail.com
  license:
    name: Package 
    url: https://pkg.go.dev/github.com/PakArbi/pasetobackend
  version: 1.0.11
externalDocs:
  description: Website kami
  url: https://pakarbi.github.io
servers:
  - url: https://asia-southeast2-project3-403614.cloudfunctions.net/
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pasetobackend
  - name: User
    description: Pengelolaan Data User
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pakarbibackend
  - name: Code QR
    description: Generator Code QR
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pakarbibackend
  - name: Parkiran
    description: Data Parkir
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pakarbibackend
paths:
/login:
  post:
    tags:
      - User
    summary: User Login
    description: Authenticate user
    operationId: authService
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
          examples:
            byNPM:
              value:
                npm: 1214000
                password: securepassword
            byEmail:
              value:
                email: johndoe@example.com
                password: securepassword
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
      '405':
        description: Invalid input
    security:
      - login:
        - write:apiKey
        - read:apiKey

/Register:
  post:
    tags:
      - User
    summary: Insert User
    description: Data user
    operationId: authService
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
          example:
            userid: D3/D41214000
            username: JohnDoe
            npm: 1214000
            password: securepassword
            confirmPassword: securepassword
            email: johndoe@example.com
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
      '405':
        description: Invalid input
    security:
      - login:
        - write:apiKey
        - read:apiKey
  /insertParkiranEmail:
    post:
      tags:
        - Parkiran
      summary: Insert Data Parkiran
      description: Data private
      operationId: inputDataParkir
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parkiran'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parkiran'
        '405':
          description: Invalid input
        '201':
          description: QR Code generated successfully
          content:
            image/png:
              schema:
                type: string
                format: binary
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /updateParkiranEmail:
    put:
      tags:
        - Parkiran
      summary: Update data User Khusus Admin
      description: Header auth for admin only
      operationId: UpdatedataParkir
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Updated'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parkiran'
        '400':
          description: Invalid status value
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /deleteParkiranEmail:
    delete:
      tags:
        - Parkiran
      summary: Delete Data atau mereset
      description: Header auth for admin only
      operationId: DeleteDataParkir
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parkiran'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parkiran'
        '400':
          description: Invalid status value
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /codeqr:
    post:
      tags:
        - Code QR
      summary: A QR code generation endpoint
      parameters:
        - name: ID
          in: query
          required: true
          description: ID of the profile
          schema:
            type: string
        - name: Parkiranid
          in: query
          required: true
          description: ID of the parkiran
          schema:
            type: integer
        - name: Nama
          in: query
          required: true
          description: Nama lengkap
          schema:
            type: string
        - name: NPM
          in: query
          required: true
          description: Nomor Pokok Mahasiswa (NPM)
          schema:
            type: string
        - name: Prodi
          in: query
          required: true
          description: Program Studi
          schema:
            type: string
        - name: NamaKendaraan
          in: query
          required: true
          description: Nama kendaraan
          schema:
            type: string
        - name: NomorKendaraan
          in: query
          required: true
          description: Nomor kendaraan
          schema:
            type: string
        - name: JenisKendaraan
          in: query
          required: true
          description: Jenis kendaraan
          schema:
            type: string
        - name: Status
          in: query
          required: true
          description: Status parkir
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parkiran'
        '405':
          description: Invalid input
      security:
        - login:
          - write:apiKey
          - read:apiKey
    
components:
  schemas:
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    Auth:
      type: object
      properties:
        email:
          type: string
          example: PakArbi2023@std.ulbi.ac.id
        password:
          type: string
          example: adminpakarbipass
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: pakarbi 
    Parkiran:
      type: object
      properties:
        id:
          type: string
          example: 1
        namalengkap:
          type: string
          example: john
        npm:
          type: string
          example: 1214000
        namakendaraan:
          type: string
          example: Honda 
        nomorkendaraan:
          type: string
          example: B 4416 LGJ
        status:
          type: string
          example: sudah masuk
    Updated:
      type: object
      properties:
        id:
          type: string
          example: 1
        namalengkap:
          type: string
          example: Steven
        npm:
          type: string
          example: 1214041
        namakendaraan:
          type: string
          example: Honda 
        nomorkendaraan:
          type: string
          example: B 4416 LGJ
        status:
          type: string
          example: sudah masuk
    User:
      type: object
      properties:
        email:
          type: string
          example: 1214041@std.ulbi.ac.id
        password:
          type: string
          example: 1214041
        role:
          type: string
          example: user
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    login:
      type: apiKey
      name: login
      in: header
