openapi: 3.0.3
info:
  title: Documents API Cloud Function PakArbi - OpenAPI 3.0
  description: "Dokumentasi API untuk Aplikasi PakArbi dari Cloud function"
  termsOfService: https://github.com/PakArbi/documents
  contact:
    email: sidiqfaisal30@gmail.com
  license:
    name: Package
    url: https://pkg.go.dev/github.com/PakArbi/pakarbibackend
  version: 1.0.11
externalDocs:
  description: Website kami
  url: https://pakarbi.github.io
servers:
  - url: https://asia-southeast2-pakarbi.cloudfunctions.net/
  - url: https://asia-southeast2-project3-403614.cloudfunctions.net/
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pakarbibackend
  - name: ParkiranNPM
    description: Pengelolaan Data Parkir User NPM
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pakarbibackend
  - name: ParkiranEmail
    description: Pengelolaan Data Parkir User Email
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pakarbi.github.io/pakarbibackend
paths:
  /registerpakarbi:
    post:
      tags:
        - auth
      summary: Insert User
      description: Data user
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              userid: "D3/D41214000"
              username: "Pakarbi"
              npm: 1214000
              password: "123456"
              confirmPassword: "123456"
              email: "1214000@std.ulbi.ac.id"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              example:
                userid: "D3/D41214000"
                username: "Pakarbi"
                npm: 1214000
                password: "123456"
                passwordhash: "123456"
                email: "1214000@std.ulbi.ac.id"
        '405':
          description: Invalid input
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /loginpakarbinmp:
    post:
      tags:
        - auth
      summary: Insert User
      description: Data user
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              npm: "1214000"
              password: "123456"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /loginpakarbiemail:
    post:
      tags:
        - auth
      summary: Insert User
      description: Data user
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              email: "1214000@std.ulbi.ac.id"
              password: "123456"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /insertparkirannpm:
    post:
      tags:
        - ParkiranNPM
      summary: Insert Data Parkiran with QR Code
      description: Insert private data and generate QR Code
      operationId: inputDataParkirWithQR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parkiran'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parkiran'
        '405':
          description: Invalid input
        '201':
          description: QR Code generated successfully
          content:
            image/png:
              schema:
                type: string
                format: binary
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /updateparkirannpm:
    put:
      tags:
        - ParkiranNPM
      summary: Update data User Khusus Admin
      description: Header auth for admin only
      operationId: UpdatedataParkir
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Updated'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parkiran'
        '400':
          description: Invalid status value
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /deleteparkirannpm:
    delete:
      tags:
        - ParkiranNPM
      summary: Delete Data atau mereset
      description: Header auth for admin only
      operationId: DeleteDataParkir
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parkiran'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parkiran'
        '400':
          description: Invalid status value
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /insertparkiranemail:
    post:
      tags:
        - ParkiranEmail
      summary: Insert Data Parkiran with QR Code
      description: Insert private data and generate QR Code
      operationId: inputDataParkirWithQR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parkiran'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parkiran'
        '405':
          description: Invalid input
        '201':
          description: QR Code generated successfully
          content:
            image/png:
              schema:
                type: string
                format: binary
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /updateparkiranemail:
    put:
      tags:
        - ParkiranEmail
      summary: Update data User Khusus Admin
      description: Header auth for admin only
      operationId: UpdatedataParkir
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Updated'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parkiran'
        '400':
          description: Invalid status value
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /deleteparkiranemail:
    delete:
      tags:
        - ParkiranEmail
      summary: Delete Data atau mereset
      description: Header auth for admin only
      operationId: DeleteDataParkir
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parkiran'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parkiran'
        '400':
          description: Invalid status value
      security:
        - login:
          - write:apiKey
          - read:apiKey
  # /codeqr:
  #   post:
  #     tags:
  #       - Code QR
  #     summary: A QR code generation endpoint
  #     parameters:
  #       - name: Parkiranid
  #         in: query
  #         required: true
  #         description: ID of the parkiran
  #         schema:
  #           type: string
  #       - name: Nama
  #         in: query
  #         required: true
  #         description: Nama lengkap
  #         schema:
  #           type: string
  #       - name: NPM
  #         in: query
  #         required: true
  #         description: Nomor Pokok Mahasiswa (NPM)
  #         schema:
  #           type: string
  #       - name: Prodi
  #         in: query
  #         required: true
  #         description: Program Studi
  #         schema:
  #           type: string
  #       - name: NamaKendaraan
  #         in: query
  #         required: true
  #         description: Nama kendaraan
  #         schema:
  #           type: string
  #       - name: NomorKendaraan
  #         in: query
  #         required: true
  #         description: Nomor kendaraan
  #         schema:
  #           type: string
  #       - name: JenisKendaraan
  #         in: query
  #         required: true
  #         description: Jenis kendaraan
  #         schema:
  #           type: string
  #       - name: Jammasuk
  #         in: query
  #         required: true
  #         description: Jam Masuk
  #         schema:
  #           type: string
  #       - name: Jamkeluar
  #         in: query
  #         required: true
  #         description: Jam Keluar
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           image/png:
  #             schema:
  #               type: string
  #               format: binary
  #       '400':
  #         description: Bad Request
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Parkiran'
  #       '405':
  #         description: Invalid input
  #     security:
  #       - login:
  #         - write:apiKey
  #         - read:apiKey
  /getallparkiran:
    get:
      tags:
        - Parkiran
      summary: Get All Parkiran Data
      description: Get all data of parkiran
      operationId: getAllDataParkiran
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parkiran'
        '405':
          description: Invalid input
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /getoeneparkiran:
    get:
      tags:
        - Parkiran
      summary: Get One Parkiran Data
      description: Get one data of parkiran by ID
      operationId: getOneDataParkiran
      parameters:
        - name: parkiranId
          in: path
          required: true
          description: ID of the parkiran
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parkiran'
        '404':
          description: Parkiran not found
      security:
        - login:
          - write:apiKey
          - read:apiKey
components:
  schemas:
    User:
      type: object
      properties:
        usernameid:
          type: string
          example: "D3/D41214000"
        username:
          type: string
          example: "sal"
        npm:
          type: string
          example: "1214000"
        password:
          type: string
          example: "securepassword"
        passwordhash:
          type: string
          example: "securepasswordhash"
        email:
          type: string
          example: "1214000@std.ulbi.ac.id"
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    Auth:
      type: object
      properties:
        email:
          type: string
          example: PakArbi2023@std.ulbi.ac.id
        password:
          type: string
          example: adminpakarbipass
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: pakarbi
    Parkiran:
      type: object
      properties:
        id:
          type: string
          example: 1
        namalengkap:
          type: string
          example: pakarbi
        npm:
          type: string
          example: "1214000"
        namakendaraan:
          type: string
          example: Honda
        nomorkendaraan:
          type: string
          example: B 4416 LGJ
        jeniskendaraan:
          type: string
          example: Motor
    Updated:
      type: object
      properties:
        parkiranid:
          type: string
          example: D31214000
        namalengkap:
          type: string
          example: pakarbi
        npm:
          type: string
          example: 1214000
        namakendaraan:
          type: string
          example: Honda
        nomorkendaraan:
          type: string
          example: B 4416 LGJ
        jeniskendaraan:
          type: string
          example: Motor
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    login:
      type: apiKey
      name: login
      in: header
